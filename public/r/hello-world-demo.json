{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "hello-world-demo",
  "type": "registry:item",
  "title": "Hello World Demo Page",
  "description": "A demo page showcasing PayloadCMS blocks with sample data.",
  "files": [
    {
      "path": "registry/new-york/blocks/hello-world-demo/page.tsx",
      "content": "import { BlocksRenderer } from \"@/registry/new-york/blocks/hello-world-demo/components/blocks-renderer\";\nimport type { HelloWorldType } from \"@/registry/new-york/blocks/hello-world-demo/lib/payload-types\";\n\n// Sample data - replace this with actual PayloadCMS data fetching\nconst sampleBlocks: HelloWorldType[] = [\n  {\n    blockType: \"hello-world\",\n    title: \"Welcome to PayloadCMS Blocks\",\n    content:\n      \"This is your HelloWorld block component working perfectly with the configuration.\",\n    buttonText: \"Get Started\",\n    id: \"1\",\n  },\n  {\n    blockType: \"hello-world\",\n    title: \"Another Block Instance\",\n    content:\n      \"You can have multiple instances of the same block with different content.\",\n    buttonText: \"Learn More\",\n    id: \"2\",\n  },\n];\n\nexport default function Page() {\n  return (\n    <main className=\"container mx-auto py-8 px-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        <h1 className=\"text-3xl font-bold mb-8 text-center\">\n          PayloadCMS Blocks Demo\n        </h1>\n        <BlocksRenderer blocks={sampleBlocks} />\n      </div>\n    </main>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/page.tsx"
    },
    {
      "path": "registry/new-york/blocks/hello-world-demo/lib/payload-types.ts",
      "content": "export interface HelloWorldType {\n  blockType: \"hello-world\";\n  title?: string;\n  content?: string;\n  buttonText?: string;\n  id?: string;\n}\n",
      "type": "registry:lib"
    },
    {
      "path": "registry/new-york/blocks/hello-world-demo/components/blocks-renderer.tsx",
      "content": "import { HelloWorldBlock } from \"@/registry/new-york/blocks/hello-world-demo/blocks/hello-world/component\";\nimport type { HelloWorldType } from \"@/registry/new-york/blocks/hello-world-demo/lib/payload-types\";\n\nexport function BlocksRenderer({ blocks }: { blocks: HelloWorldType[] }) {\n  return (\n    <div className=\"space-y-8\">\n      {blocks.map((block, index) => {\n        switch (block.blockType) {\n          case \"hello-world\":\n            return (\n              <HelloWorldBlock\n                key={block.id || index}\n                title={block.title}\n                content={block.content}\n                buttonText={block.buttonText}\n                blockType=\"hello-world\"\n              />\n            );\n          default:\n            return null;\n        }\n      })}\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "registry/new-york/blocks/hello-world-demo/blocks/hello-world/component.tsx",
      "content": "import { Button } from \"@/registry/new-york/ui/button\";\nimport type { HelloWorldType } from \"@/registry/new-york/blocks/hello-world-demo/lib/payload-types\";\n\nexport function HelloWorldBlock({\n  title,\n  content,\n  buttonText,\n}: HelloWorldType) {\n  return (\n    <div className=\"p-6 border rounded-lg\">\n      <h2 className=\"text-xl font-semibold mb-4\">{title}</h2>\n      <p className=\"text-muted-foreground mb-4\">{content}</p>\n      <Button>{buttonText}</Button>\n    </div>\n  );\n}\n",
      "type": "registry:component",
      "target": "blocks/hello-world/component.tsx"
    },
    {
      "path": "registry/new-york/blocks/hello-world-demo/blocks/hello-world/config.ts",
      "content": "export const HelloWorld: any = {\n  slug: \"hello-world\",\n  interfaceName: \"HelloWorldBlock\",\n  fields: [\n    {\n      name: \"title\",\n      type: \"text\",\n      required: true,\n      defaultValue: \"Hello World Payload Block\",\n    },\n    {\n      name: \"content\",\n      type: \"text\",\n      required: false,\n      defaultValue:\n        \"This is a payload block component with both component.tsx and config.ts files.\",\n    },\n    {\n      name: \"buttonText\",\n      type: \"text\",\n      required: false,\n      defaultValue: \"Click me\",\n    },\n  ],\n};\n",
      "type": "registry:component",
      "target": "blocks/hello-world/config.ts"
    }
  ]
}